<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="8" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-06-03T12:48:40 BST" name="Default suite" finished-at="2021-06-03T12:48:47 BST" duration-ms="6575">
    <groups>
    </groups>
    <test started-at="2021-06-03T12:48:40 BST" name="Default test" finished-at="2021-06-03T12:48:47 BST" duration-ms="6575">
      <class name="Manager.NewCustomer">
        <test-method signature="openbrowser()[pri:-200, instance:Manager.NewCustomer@6d2a209c]" started-at="2021-06-03T12:48:41 BST" name="openbrowser" finished-at="2021-06-03T12:48:45 BST" duration-ms="4718" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbrowser -->
        <test-method signature="NC29()[pri:-100, instance:Manager.NewCustomer@6d2a209c]" started-at="2021-06-03T12:48:45 BST" name="NC29" finished-at="2021-06-03T12:48:46 BST" duration-ms="744" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Email-ID is not valid] but found [Email-ID must not be blank]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Email-ID is not valid] but found [Email-ID must not be blank]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at Manager.NewCustomer.NC29(NewCustomer.java:344)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NC29 -->
        <test-method signature="NC27()[pri:-2, instance:Manager.NewCustomer@6d2a209c]" started-at="2021-06-03T12:48:46 BST" name="NC27" finished-at="2021-06-03T12:48:46 BST" duration-ms="440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NC27 -->
        <test-method signature="NC1()[pri:0, instance:Manager.NewCustomer@6d2a209c]" started-at="2021-06-03T12:48:46 BST" name="NC1" finished-at="2021-06-03T12:48:47 BST" duration-ms="362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NC1 -->
        <test-method signature="closebrowser()[pri:2000, instance:Manager.NewCustomer@6d2a209c]" started-at="2021-06-03T12:48:47 BST" name="closebrowser" finished-at="2021-06-03T12:48:47 BST" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
      </class> <!-- Manager.NewCustomer -->
      <class name="Manager.annotationexample">
        <test-method is-config="true" signature="beforecalss()[pri:0, instance:Manager.annotationexample@49b0b76]" started-at="2021-06-03T12:48:47 BST" name="beforecalss" finished-at="2021-06-03T12:48:47 BST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforecalss -->
        <test-method is-config="true" signature="Bmethod()[pri:0, instance:Manager.annotationexample@49b0b76]" started-at="2021-06-03T12:48:47 BST" name="Bmethod" finished-at="2021-06-03T12:48:47 BST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bmethod -->
        <test-method signature="method1()[pri:0, instance:Manager.annotationexample@49b0b76]" started-at="2021-06-03T12:48:47 BST" name="method1" finished-at="2021-06-03T12:48:47 BST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method1 -->
        <test-method is-config="true" signature="amethod()[pri:0, instance:Manager.annotationexample@49b0b76]" started-at="2021-06-03T12:48:47 BST" name="amethod" finished-at="2021-06-03T12:48:47 BST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amethod -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:Manager.annotationexample@49b0b76]" started-at="2021-06-03T12:48:47 BST" name="afterclass" finished-at="2021-06-03T12:48:47 BST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
        <test-method is-config="true" signature="after()[pri:0, instance:Manager.annotationexample@49b0b76]" started-at="2021-06-03T12:48:47 BST" name="after" finished-at="2021-06-03T12:48:47 BST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- Manager.annotationexample -->
      <class name="Manager.annotationexample1">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:Manager.annotationexample1@5ae50ce6]" started-at="2021-06-03T12:48:41 BST" name="beforetest" finished-at="2021-06-03T12:48:41 BST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method is-config="true" signature="beforecalss()[pri:0, instance:Manager.annotationexample1@5ae50ce6]" started-at="2021-06-03T12:48:47 BST" name="beforecalss" finished-at="2021-06-03T12:48:47 BST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforecalss -->
        <test-method is-config="true" signature="Bmethod()[pri:0, instance:Manager.annotationexample1@5ae50ce6]" started-at="2021-06-03T12:48:47 BST" name="Bmethod" finished-at="2021-06-03T12:48:47 BST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bmethod -->
        <test-method signature="method2()[pri:0, instance:Manager.annotationexample1@5ae50ce6]" started-at="2021-06-03T12:48:47 BST" name="method2" finished-at="2021-06-03T12:48:47 BST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method2 -->
        <test-method is-config="true" signature="amethod()[pri:0, instance:Manager.annotationexample1@5ae50ce6]" started-at="2021-06-03T12:48:47 BST" name="amethod" finished-at="2021-06-03T12:48:47 BST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amethod -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:Manager.annotationexample1@5ae50ce6]" started-at="2021-06-03T12:48:47 BST" name="afterclass" finished-at="2021-06-03T12:48:47 BST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
      </class> <!-- Manager.annotationexample1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
